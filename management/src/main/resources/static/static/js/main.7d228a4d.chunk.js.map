{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","components/Menu.tsx","components/ExploreContainer.tsx","pages/customer/CustomerApi.ts","pages/customer/CustumerList.tsx","pages/customer/CustomerEdit.tsx","pages/employee/EmployeeApi.ts","pages/employee/EmployeeList.tsx","pages/employee/EmployeeEdit.tsx","pages/vendors/VendorApi.ts","pages/vendors/VendorList.tsx","pages/vendors/VendorEdit.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","appPages","title","url","iosIcon","peopleOutline","mdIcon","people","labels","Menu","location","useLocation","contentId","type","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","label","icon","bookmarkOutline","ExploreContainer","name","target","rel","href","searchCustomers","a","process","fetch","response","json","removeCustomer","saveCustomer","customer","JSON","stringify","findClientByID","CustomerList","useParams","useState","clients","setClients","history","useHistory","useEffect","search","result","remove","fullscreen","collapse","size","color","fill","onClick","push","add","client","firstName","lastName","email","phone","address","web","String","pencil","closeCircle","CustomerEdit","setCustomer","routeMatch","useRouteMatch","params","console","log","vendor","save","position","onIonChange","value","contact","checkmark","searchEmployee","removeEmployee","saveEmployee","employee","findEmployeeByID","EmployeeList","employees","setEmployee","EmployeeEdit","salary","searchVendor","removeVendor","saveVendor","findVendorByID","VendorList","vendors","setVendor","VendorEdit","setupIonicReact","App","path","exact","to","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d228a4d.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 53;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 54;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t82,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 55;\nmodule.exports = webpackAsyncContext;","import {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonNote,\n} from '@ionic/react';\n\nimport { useLocation } from 'react-router-dom';\nimport { archiveOutline, archiveSharp, bookmarkOutline, heartOutline, heartSharp,\n  mailOutline, mailSharp, paperPlaneOutline, paperPlaneSharp, trashOutline, trashSharp,\n  warningOutline, warningSharp, people, peopleOutline} from 'ionicons/icons';\nimport './Menu.css';\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Customer',\n    url: '/page/customer',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  },\n  {\n    title: 'Employee',\n    url: '/page/employee',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  },\n  {\n    title: 'Vendor',\n    url: '/page/vendor',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  }\n];\n\nconst labels = ['Family', 'Friends', 'Notes', 'Work', 'Travel', 'Reminders'];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"inbox-list\">\n          <IonListHeader>Inbox</IonListHeader>\n          <IonNote>hi@ionicframework.com</IonNote>\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  <IonIcon slot=\"start\" ios={appPage.iosIcon} md={appPage.mdIcon} />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n\n        <IonList id=\"labels-list\">\n          <IonListHeader>Labels</IonListHeader>\n          {labels.map((label, index) => (\n            <IonItem lines=\"none\" key={index}>\n              <IonIcon slot=\"start\" icon={bookmarkOutline} />\n              <IonLabel>{label}</IonLabel>\n            </IonItem>\n          ))}\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import './ExploreContainer.css';\n\ninterface ContainerProps {\n  name: string;\n}\n\nconst ExploreContainer: React.FC<ContainerProps> = ({ name }) => {\n  return (\n    <div className=\"container\">\n      <strong>{name}</strong>\n      <p>Explore <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ionicframework.com/docs/components\">UI Components</a></p>\n    </div>\n  );\n};\n\nexport default ExploreContainer;\n","import Customer from \"./Customer\";\r\n\r\nexport async function searchCustomers() {\r\n    let url = process.env.REACT_APP_API + 'clients'\r\n    let response = await fetch(url, {\r\n        \"method\" : 'GET',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n    return await response.json();\r\n\r\n}\r\n\r\nexport async function removeCustomer(id:string) {\r\n    let url = process.env.REACT_APP_API + 'clients/delete/' + id\r\n    await fetch(url, {\r\n        \"method\" : 'DELETE',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport async function saveCustomer( customer:Customer) {\r\n    let url = process.env.REACT_APP_API + 'clients/save/';\r\n    await fetch(url, {\r\n        \"method\" : 'POST',\r\n        \"body\" : JSON.stringify(customer),\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport async function findClientByID(id:string){\r\n    let url = process.env.REACT_APP_API + 'clients/' + id;\r\n    let response = await fetch(url, {\r\n        \"method\" : 'GET',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n    return await response.json();\r\n}","import {\r\n    IonButton,\r\n    IonButtons, IonCard, IonCol,\r\n    IonContent,\r\n    IonGrid,\r\n    IonHeader, IonIcon, IonItem,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonTitle,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport {useHistory, useParams} from 'react-router';\r\nimport ExploreContainer from '../../components/ExploreContainer';\r\nimport {add, closeCircle, pencil} from \"ionicons/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {removeCustomer, saveCustomer, searchCustomers} from \"./CustomerApi\";\r\nimport Customer from \"./Customer\";\r\n\r\n\r\nconst CustomerList: React.FC = () => {\r\n\r\n    const { name } = useParams<{ name: string; }>();\r\n    const [clients, setClients] = useState<Customer[]>([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname]);\r\n\r\n\r\n    const search = async () => {\r\n        let result = await searchCustomers();\r\n        setClients(result);\r\n    }\r\n    const remove = async (id:string) => {\r\n        await removeCustomer(id);\r\n        search();\r\n    }\r\n\r\n    const addClient = () => {\r\n        history.push('/page/customer/new')\r\n    }\r\n\r\n    const editCustomer = (id:string) => {\r\n        history.push('/page/customer/' + id)\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{name}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonHeader collapse=\"condense\">\r\n                    <IonToolbar>\r\n                        <IonTitle size=\"large\">{name}</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <ExploreContainer name={name} />\r\n\r\n                <IonContent>\r\n                    <IonCard>\r\n\r\n                        <IonTitle> Customer Management</IonTitle>\r\n                        <IonItem>\r\n                            <IonButton color=\"primary\" fill=\"solid\" slot=\"end\" size=\"default\" onClick={addClient}>\r\n                                <IonIcon icon={add}/>\r\n                                     Add Client\r\n                            </IonButton>\r\n                        </IonItem>\r\n\r\n                        <IonGrid className=\"table\">\r\n\r\n                        <IonRow >\r\n                            <IonCol>Name</IonCol>\r\n                            <IonCol>Email</IonCol>\r\n                            <IonCol>Phone</IonCol>\r\n                            <IonCol>Address</IonCol>\r\n                            <IonCol>Web</IonCol>\r\n                            <IonCol>Actions</IonCol>\r\n                        </IonRow>\r\n                            {clients.map( (client: Customer) =>\r\n                                <IonRow>\r\n                                    <IonCol>{client.firstName} {client.lastName} </IonCol>\r\n                                    <IonCol>{client.email}</IonCol>\r\n                                    <IonCol>{client.phone} </IonCol>\r\n                                    <IonCol>{client.address} </IonCol>\r\n                                    <IonCol>{client.web} </IonCol>\r\n                                    <IonCol>\r\n                                        <IonButton  color=\"primary\" fill=\"clear\"\r\n                                                    onClick={() => editCustomer(String(client.id))}>\r\n                                            <IonIcon icon={pencil} slot=\"icon-only\"/>\r\n                                        </IonButton>\r\n\r\n                                        <IonButton  color=\"danger\" fill=\"clear\"\r\n                                                    onClick={() => remove(String(client.id))} >\r\n                                            <IonIcon icon={closeCircle} slot=\"icon-only\"/>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            )}\r\n\r\n\r\n                    </IonGrid>\r\n                    </IonCard>\r\n\r\n                </IonContent>\r\n\r\n\r\n\r\n\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default CustomerList;\r\n","import {\r\n    IonButton,\r\n    IonButtons, IonCard, IonCol,\r\n    IonContent,\r\n    IonHeader, IonIcon, IonInput, IonItem, IonLabel,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonTitle,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport {useHistory, useParams, useRouteMatch} from 'react-router';\r\nimport ExploreContainer from '../../components/ExploreContainer';\r\nimport {add, checkmark, closeCircle, pencil, save, sync, text} from \"ionicons/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {findClientByID, removeCustomer, saveCustomer, searchCustomers} from \"./CustomerApi\";\r\nimport Customer from \"./Customer\";\r\nimport {findVendorByID} from \"../vendors/VendorApi\";\r\n\r\n\r\nconst CustomerEdit: React.FC = () => {\r\n\r\n    const { firstName} = useParams<Customer>();\r\n    const [customer, setCustomer] = useState<Customer>({});\r\n    const history = useHistory();\r\n\r\n    const routeMatch:any = useRouteMatch(\"/page/customer/:id\");\r\n    const id = routeMatch?.params?.id;\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname]);\r\n\r\n    const search = async () => {\r\n        if(id === 'new') {\r\n            setCustomer({});\r\n        }else{\r\n            let vendor = await findClientByID(id);\r\n            setCustomer(vendor);\r\n        }\r\n    }\r\n    const save = async () => {\r\n        await saveCustomer(customer);\r\n        history.push(\"/page/customer\");\r\n    }\r\n\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{firstName}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonHeader collapse=\"condense\">\r\n                    <IonToolbar>\r\n                        <IonTitle size=\"large\">{firstName}</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <ExploreContainer name={String(firstName)} />\r\n\r\n                <IonContent>\r\n                    <IonCard>\r\n\r\n                        <IonTitle>  {id === 'new' ? 'Add Customer': 'Edit Customer'}</IonTitle>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">First Name</IonLabel>\r\n                                    <IonInput onIonChange={e => customer.firstName = String(e.detail.value)} value={customer.firstName}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Last Name</IonLabel>\r\n                                    <IonInput onIonChange= {e => customer.lastName = String(e.detail.value)}\r\n                                              value={customer.lastName}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Contact</IonLabel>\r\n                                    <IonInput onIonChange={e => customer.contact = String(e.detail.value)}\r\n                                              value={customer.contact}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">WEB</IonLabel>\r\n                                    <IonInput onIonChange= {e => customer.web = String(e.detail.value)}\r\n                                              value={customer.web}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Email</IonLabel>\r\n                                    <IonInput onIonChange= {e => customer.email = String(e.detail.value)}\r\n                                              value={customer.email}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Phone</IonLabel>\r\n                                    <IonInput onIonChange= {e => customer.phone = String(e.detail.value)}\r\n                                              value={customer.phone}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Address</IonLabel>\r\n                                    <IonInput onIonChange= {e => customer.address = String(e.detail.value)}\r\n                                              value={customer.address}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n\r\n                        <IonItem>\r\n                            <IonButton color=\"success\" fill=\"solid\" slot=\"end\" size=\"default\"  onClick={save}>\r\n                                <IonIcon icon={checkmark}/>\r\n                                Save\r\n                            </IonButton>\r\n                        </IonItem>\r\n                    </IonCard>\r\n\r\n                </IonContent>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default CustomerEdit;","\r\nimport Employee from \"./Employee\";\r\n\r\nexport async function searchEmployee() {\r\n    let url = process.env.REACT_APP_API + 'employees'\r\n    let response = await fetch(url, {\r\n        \"method\" : 'GET',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n    return await response.json();\r\n}\r\n\r\nexport async function removeEmployee(id:string) {\r\n    let url = process.env.REACT_APP_API + 'employee/delete/' + id\r\n    await fetch(url, {\r\n        \"method\" : 'DELETE',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport async function saveEmployee( employee:Employee) {\r\n    let url = process.env.REACT_APP_API + 'employee/save/';\r\n    await fetch(url, {\r\n        \"method\" : 'POST',\r\n        \"body\" : JSON.stringify(employee),\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport async function findEmployeeByID(id:string){\r\n    let url = process.env.REACT_APP_API + 'employee/' + id;\r\n    let response = await fetch(url, {\r\n        \"method\" : 'GET',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n    return await response.json();\r\n}","import {\r\n    IonButton,\r\n    IonButtons, IonCard, IonCol,\r\n    IonContent,\r\n    IonGrid,\r\n    IonHeader, IonIcon, IonItem,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonTitle,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport {useHistory, useParams} from 'react-router';\r\nimport ExploreContainer from '../../components/ExploreContainer';\r\nimport {add, closeCircle, pencil} from \"ionicons/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {removeEmployee, searchEmployee} from \"./EmployeeApi\";\r\nimport Employee from \"./Employee\";\r\n\r\nconst EmployeeList: React.FC = () => {\r\n\r\n    const { name } = useParams<{ name: string; }>();\r\n    const [employees, setEmployee] = useState<Employee[]>([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname]);\r\n\r\n    const search = async () => {\r\n        let result = await searchEmployee();\r\n        setEmployee(result);\r\n    }\r\n    const remove = async (id:string) => {\r\n        await removeEmployee(id);\r\n        search();\r\n    }\r\n\r\n    const addEmployee = () => {\r\n        history.push('/page/employee/new')\r\n    }\r\n\r\n    const editEmployee = (id:string) => {\r\n        history.push('/page/employee/' + id)\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{name}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonHeader collapse=\"condense\">\r\n                    <IonToolbar>\r\n                        <IonTitle size=\"large\">{name}</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <ExploreContainer name={name} />\r\n\r\n                <IonContent>\r\n                    <IonCard>\r\n\r\n                        <IonTitle> Employee Management</IonTitle>\r\n                        <IonItem>\r\n                            <IonButton color=\"primary\" fill=\"solid\" slot=\"end\" size=\"default\" onClick={addEmployee}>\r\n                                <IonIcon icon={add}/>\r\n                                     Add Employee\r\n                            </IonButton>\r\n                        </IonItem>\r\n\r\n                        <IonGrid className=\"table\">\r\n\r\n                        <IonRow >\r\n                            <IonCol>Name</IonCol>\r\n                            <IonCol>Email</IonCol>\r\n                            <IonCol>Phone</IonCol>\r\n                            <IonCol>Address</IonCol>\r\n                            <IonCol>Actions</IonCol>\r\n                        </IonRow>\r\n                            {employees.map( (client: Employee) =>\r\n                                <IonRow>\r\n                                    <IonCol>{client.firstName} {client.lastName} </IonCol>\r\n                                    <IonCol>{client.email}</IonCol>\r\n                                    <IonCol>{client.phone} </IonCol>\r\n                                    <IonCol>{client.address} </IonCol>\r\n                                    <IonCol>\r\n                                        <IonButton  color=\"primary\" fill=\"clear\"\r\n                                                    onClick={() => editEmployee(String(client.id))}>\r\n                                            <IonIcon icon={pencil} slot=\"icon-only\"/>\r\n                                        </IonButton>\r\n\r\n                                        <IonButton  color=\"danger\" fill=\"clear\"\r\n                                                    onClick={() => remove(String(client.id))} >\r\n                                            <IonIcon icon={closeCircle} slot=\"icon-only\"/>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            )}\r\n\r\n\r\n                    </IonGrid>\r\n                    </IonCard>\r\n\r\n                </IonContent>\r\n\r\n\r\n\r\n\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import {\r\n    IonButton,\r\n    IonButtons, IonCard, IonCol,\r\n    IonContent,\r\n    IonHeader, IonIcon, IonInput, IonItem, IonLabel,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonTitle,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport {useHistory, useParams, useRouteMatch} from 'react-router';\r\nimport ExploreContainer from '../../components/ExploreContainer';\r\nimport {add, checkmark, closeCircle, pencil, save, text} from \"ionicons/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {findEmployeeByID, saveEmployee} from \"./EmployeeApi\";\r\nimport Employee from \"./Employee\";\r\nimport {findVendorByID} from \"../vendors/VendorApi\";\r\n\r\nconst EmployeeEdit: React.FC = () => {\r\n\r\n    const { firstName } = useParams<Employee>();\r\n\r\n    const [employee, setEmployee] = useState<Employee>({});\r\n    const history = useHistory();\r\n\r\n    const routeMatch:any = useRouteMatch(\"/page/employee/:id\");\r\n    const id = routeMatch?.params?.id;\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname]);\r\n\r\n    const search = async () => {\r\n        if(id === 'new') {\r\n            setEmployee({});\r\n        }else{\r\n            let vendor = await findEmployeeByID(id);\r\n            setEmployee(vendor);\r\n        }\r\n    }\r\n    const save = async () => {\r\n        await saveEmployee(employee);\r\n        history.push(\"/page/employee\");\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{firstName}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonHeader collapse=\"condense\">\r\n                    <IonToolbar>\r\n                        <IonTitle size=\"large\">{firstName}</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <ExploreContainer name={String(firstName)} />\r\n\r\n                <IonContent>\r\n                    <IonCard>\r\n\r\n                        <IonTitle>  {id === 'new' ? 'Add Employee': 'Edit Employee'}</IonTitle>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">First Name</IonLabel>\r\n                                    <IonInput onIonChange={e => employee.firstName = String(e.detail.value)} value={employee.firstName}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Last Name</IonLabel>\r\n                                    <IonInput onIonChange= {e => employee.lastName = String(e.detail.value)}\r\n                                              value={employee.lastName}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Email</IonLabel>\r\n                                    <IonInput onIonChange= {e => employee.email = String(e.detail.value)}\r\n                                              value={employee.email}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Phone</IonLabel>\r\n                                    <IonInput onIonChange= {e => employee.phone = String(e.detail.value)}\r\n                                              value={employee.phone}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Address</IonLabel>\r\n                                    <IonInput onIonChange= {e => employee.address = String(e.detail.value)}\r\n                                              value={employee.address}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Salary</IonLabel>\r\n                                    <IonInput onIonChange= {e => employee.salary = String(e.detail.value)}\r\n                                              value={employee.salary}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n\r\n                        <IonItem>\r\n                            <IonButton color=\"success\" fill=\"solid\" slot=\"end\" size=\"default\"  onClick={save}>\r\n                                <IonIcon icon={checkmark}/>\r\n                                Save\r\n                            </IonButton>\r\n                        </IonItem>\r\n                    </IonCard>\r\n\r\n                </IonContent>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default EmployeeEdit;","\r\nimport Vendor from \"./Vendor\";\r\n\r\nexport async function searchVendor() {\r\n    let url = process.env.REACT_APP_API + 'vendors'\r\n    let response = await fetch(url, {\r\n        \"method\" : 'GET',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n    return await response.json();\r\n}\r\n\r\nexport async function removeVendor(id:string) {\r\n    let url = process.env.REACT_APP_API + 'vendor/delete/' + id\r\n    await fetch(url, {\r\n        \"method\" : 'DELETE',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport async function saveVendor( vendor:Vendor) {\r\n    let url = process.env.REACT_APP_API + 'vendor/save/';\r\n    await fetch(url, {\r\n        \"method\" : 'POST',\r\n        \"body\" : JSON.stringify(vendor),\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport async function findVendorByID(id:string){\r\n    let url = process.env.REACT_APP_API + 'vendor/' + id;\r\n    let response = await fetch(url, {\r\n        \"method\" : 'GET',\r\n        \"headers\" : {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    })\r\n    return await response.json();\r\n}","import {\r\n    IonButton,\r\n    IonButtons, IonCard, IonCol,\r\n    IonContent,\r\n    IonGrid,\r\n    IonHeader, IonIcon, IonItem,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonTitle,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport {useHistory, useParams} from 'react-router';\r\nimport ExploreContainer from '../../components/ExploreContainer';\r\nimport {add, closeCircle, pencil} from \"ionicons/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {removeVendor, searchVendor} from \"./VendorApi\";\r\nimport Vendor from \"./Vendor\";\r\n\r\nconst VendorList: React.FC = () => {\r\n\r\n    const { name } = useParams<{ name: string; }>();\r\n    const [vendors, setVendor] = useState<Vendor[]>([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname]);\r\n\r\n    const search = async () => {\r\n        let result = await searchVendor();\r\n        setVendor(result);\r\n    }\r\n    const remove = async (id:string) => {\r\n      await removeVendor(id);\r\n      search();\r\n    }\r\n\r\n    const addVendor = () => {\r\n        history.push('/page/vendor/new')\r\n    }\r\n\r\n    const editVendor= (id:string) => {\r\n        history.push('/page/vendor/' + id)\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{name}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonHeader collapse=\"condense\">\r\n                    <IonToolbar>\r\n                        <IonTitle size=\"large\">{name}</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <ExploreContainer name={name} />\r\n\r\n                <IonContent>\r\n                    <IonCard>\r\n\r\n                        <IonTitle> Vendor Management</IonTitle>\r\n                        <IonItem>\r\n                            <IonButton color=\"primary\" fill=\"solid\" slot=\"end\" size=\"default\" onClick={addVendor}>\r\n                                <IonIcon icon={add}/>\r\n                                     Add vendor\r\n                            </IonButton>\r\n                        </IonItem>\r\n\r\n                        <IonGrid className=\"table\">\r\n\r\n                        <IonRow >\r\n                            <IonCol>Name</IonCol>\r\n                            <IonCol>Email</IonCol>\r\n                            <IonCol>Phone</IonCol>\r\n                            <IonCol>Address</IonCol>\r\n                            <IonCol>Actions</IonCol>\r\n                        </IonRow>\r\n                            {vendors.map( (client: Vendor) =>\r\n                                <IonRow>\r\n                                    <IonCol>{client.firstName} {client.lastName} </IonCol>\r\n                                    <IonCol>{client.email}</IonCol>\r\n                                    <IonCol>{client.phone} </IonCol>\r\n                                    <IonCol>{client.address} </IonCol>\r\n                                    <IonCol>\r\n                                        <IonButton  color=\"primary\" fill=\"clear\"\r\n                                                    onClick={() => editVendor(String(client.id))} >\r\n                                            <IonIcon icon={pencil} slot=\"icon-only\"/>\r\n                                        </IonButton>\r\n\r\n                                        <IonButton  color=\"danger\" fill=\"clear\"\r\n                                                    onClick={() => remove(String(client.id))} >\r\n                                            <IonIcon icon={closeCircle} slot=\"icon-only\"/>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            )}\r\n\r\n\r\n                    </IonGrid>\r\n                    </IonCard>\r\n\r\n                </IonContent>\r\n\r\n\r\n\r\n\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default VendorList;\r\n","import {\r\n    IonButton,\r\n    IonButtons, IonCard, IonCol,\r\n    IonContent,\r\n    IonHeader, IonIcon, IonInput, IonItem, IonLabel,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonTitle,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport {useHistory, useParams, useRouteMatch} from 'react-router';\r\nimport ExploreContainer from '../../components/ExploreContainer';\r\nimport {add, checkmark, closeCircle, pencil, save, text} from \"ionicons/icons\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nimport Vendor from \"./Vendor\";\r\nimport {findVendorByID, saveVendor} from \"./VendorApi\";\r\n\r\nconst VendorEdit: React.FC = () => {\r\n\r\n    const { firstName } = useParams<Vendor>();\r\n\r\n    const [vendor, setVendor] = useState<Vendor>({});\r\n    const history = useHistory();\r\n\r\n    const routeMatch:any = useRouteMatch(\"/page/vendor/:id\");\r\n    const id = routeMatch?.params?.id;\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname]);\r\n\r\n    const search = async () => {\r\n        if(id === 'new') {\r\n            setVendor({});\r\n        }else{\r\n            let vendor = await findVendorByID(id);\r\n            setVendor(vendor);\r\n        }\r\n    }\r\n    const save = async () => {\r\n        await saveVendor(vendor);\r\n        history.push(\"/page/vendor\");\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{firstName}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonHeader collapse=\"condense\">\r\n                    <IonToolbar>\r\n                        <IonTitle size=\"large\">{firstName}</IonTitle>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <ExploreContainer name={String(firstName)} />\r\n\r\n                <IonContent>\r\n                    <IonCard>\r\n\r\n                        <IonTitle>  {id === 'new' ? 'Add Vendor': 'Edit Vendor'}</IonTitle>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">First Name</IonLabel>\r\n                                    <IonInput onIonChange={e => vendor.firstName = String(e.detail.value)} value={vendor.firstName}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Last Name</IonLabel>\r\n                                    <IonInput onIonChange= {e => vendor.lastName = String(e.detail.value)}\r\n                                              value={vendor.lastName}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Email</IonLabel>\r\n                                    <IonInput onIonChange= {e => vendor.email = String(e.detail.value)}\r\n                                              value={vendor.email}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Phone</IonLabel>\r\n                                    <IonInput onIonChange= {e => vendor.phone = String(e.detail.value)}\r\n                                              value={vendor.phone}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel position=\"floating\">Address</IonLabel>\r\n                                    <IonInput onIonChange= {e => vendor.address = String(e.detail.value)}\r\n                                              value={vendor.address}></IonInput>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n\r\n                        <IonItem>\r\n                            <IonButton color=\"success\" fill=\"solid\" slot=\"end\" size=\"default\"  onClick={save}>\r\n                                <IonIcon icon={checkmark}/>\r\n                                Save\r\n                            </IonButton>\r\n                        </IonItem>\r\n                    </IonCard>\r\n\r\n                </IonContent>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default VendorEdit;","import { IonApp, IonRouterOutlet, IonSplitPane, setupIonicReact } from '@ionic/react';\nimport {IonReactHashRouter, IonReactRouter} from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport Page from './pages/Page';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport CustomerList from \"./pages/customer/CustumerList\";\nimport CustomerEdit from \"./pages/customer/CustomerEdit\";\nimport EmployeeList from \"./pages/employee/EmployeeList\";\nimport EmployeeEdit from \"./pages/employee/EmployeeEdit\";\nimport VendorList from \"./pages/vendors/VendorList\";\nimport VendorEdit from \"./pages/vendors/VendorEdit\";\n\nsetupIonicReact();\n\nconst App: React.FC = () => {\n  return (\n    <IonApp>\n      <IonReactHashRouter>\n        <IonSplitPane contentId=\"main\">\n          <Menu />\n          <IonRouterOutlet id=\"main\">\n            <Route path=\"/\" exact={true}>\n              <Redirect to=\"/page/customer\" />\n            </Route>\n            <Route\n                path=\"/page/customer\" exact={true}>\n              <CustomerList />\n            </Route>\n\n            <Route\n                path=\"/page/customer/:id\" exact={true}>\n              <CustomerEdit />\n            </Route>\n\n            <Route\n                path=\"/page/employee\" exact={true}>\n              <EmployeeList />\n            </Route>\n\n            <Route\n                path=\"/page/employee/:id\" exact={true}>\n              <EmployeeEdit />\n            </Route>\n\n            <Route\n                path=\"/page/vendor\" exact={true}>\n              <VendorList />\n            </Route>\n\n            <Route\n                path=\"/page/vendor/:id\" exact={true}>\n              <VendorEdit />\n            </Route>\n          </IonRouterOutlet>\n        </IonSplitPane>\n      </IonReactHashRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}